{{PAGE-TITLE HTMixer}}
------------------------------------
{{COMPANY-NAME {{PAGE-TITLE}}}}
{{POST-TITLE HTMixer}}
------------------------------------
{{PAGE-SEG-NAME-1 Introductions}}
{{PAGE-SEG-NAME-2 Compile}}
{{PAGE-SEG-NAME-3 Instructions}}
{{PAGE-SEG-NAME-4 Variable & Loop}}
{{PAGE-SEG-NAME-5 Generate}}
{{PAGE-SEG-NAME-6 Deploy}}
{{PAGE-SEG-NAME-7 Capability}}
------------------------------------
{{TERMINAL-STYLE class="w3-border w3-black"><cc style="color: green;">> </cc}}
{{CODE-STYLE class="w3-border"}}
------------------------------------
{{PAGE-SEG-TXT-1
<p><a href="https://github.com/liyanboy74/htmixer"><b>HTMixer</b></a> is a Static HTML page generator.
This tool can combine different pages and add content to them.
Each content can be specific to one or more templates.
This tool is written in C language and can be used for any file, but customized for
<a href="https://pages.github.com/">Github Pages</a>.
</p>
<div class="w3-center"><img src="./htmixer.png" class="w3-image"></div>
}}
------------------------------------
{{PAGE-SEG-TXT-2
<p>This tool is written in C language and uses <a href="https://gcc.gnu.org/">GCC</a> and <a href="https://www.gnu.org/software/make/">Make</a>
for compilation.</p>
<p>Compiled binary files for Windows and Ubuntu available in <a href="https://github.com/liyanboy74/htmixer/releases/latest">release</a> section.</p>
Compile <a href="https://github.com/liyanboy74/htmixer/blob/main/htmixer.c">HTMixer.c</a> :
<div {{TERMINAL-STYLE}}>make</div>
<p>After compile source, executable binary files will be generated in build folder, do not remove that!</p>
}}
------------------------------------
{{PAGE-SEG-TXT-3
<p>
Use <b>./build/htmixer</b> for mix <b>Doc</b> and <b>Var</b> files.</p>
Usage :
<div {{CODE-STYLE}}>htmixer <b>OUTPUT_FILE</b> -v <b>VAR</b> -d <b>DOC</b></div>
<br>
Example :
<div {{TERMINAL-STYLE}}>htmixer OUTPUT_FILE.html
 -v VAR1.txt VAR2.txt -d HEAD.html BODY.html FOOTER.html</div>
}}
------------------------------------
{{PAGE-SEG-TXT-4
<p>Variable defined in <b>var</b> folder,but Loops defined in <b>doc</b> folder close to HTML files.</p>
<h2>Variable:</h2>
<p>Variables that are set in the <b>var</b> folder are replaced in the <b>doc</b> folder.</p>
Example set variable <a href="https://github.com/liyanboy74/htmixer/blob/main/var/home.txt">home.txt</a> :
<div {{CODE-STYLE}}>
&lcub;&lcub;PAGE-TITLE&nbsp;&nbsp; HTMixer&rcub;&rcub;
</div>
<br>
Example use variable <a href="https://github.com/liyanboy74/htmixer/blob/main/doc/home.html">home.html</a> :
<div {{CODE-STYLE}}>
&lcub;&lcub;PAGE-TITLE&rcub;&rcub;
</div>
<br>

<h2>Loops:</h2>
<p>Loops set in <b>doc</b> To repeat its internal code.<br>
If the internal code use Variable, the Variable rename by loop counter.<br>
For example [ VAR -> VAR-0 , VAR-1 , VAR-2 , ... , VAR-N ].</p>
Example <a href="https://github.com/liyanboy74/htmixer/blob/main/doc/home.html">home.html</a> :
<div {{CODE-STYLE}}>
{{ FOR(0,5)<br>
 5 Times from 0 to 4<br>
}}<br><br>
{{ FOR(5,6)<br>
 1 Times 5<br>
}}<br><br>
{{ FOR(1,3)<br>
 2 Times from 1 to 2<br>
}}<br>
</div>
}}
------------------------------------
{{PAGE-SEG-TXT-5
<p>Generator use <a href="https://www.gnu.org/software/make/">Make</a> for running commands in the 
<a href="https://github.com/liyanboy74/htmixer/blob/main/Makefile">Makefile</a>.
</p>
Generate :
<div {{TERMINAL-STYLE}}>make generate</div>
<p>In default the generated file stored in <b>gh-pages</b> folder, in head of Makefile you can changes the output folder.</p>
}}
------------------------------------
{{PAGE-SEG-TXT-6
<p>Deployment use <a href="https://pypi.org/project/ghp-import/">ghp-import</a> for <a href="https://pages.github.com/">Github Pages</a>.</p>
Deployment :
<div {{TERMINAL-STYLE}}>make deploy</div>
<p>You can add <b>CNAME</b> by editing <b>Deploy</b> command in <a href="https://github.com/liyanboy74/htmixer/blob/main/Makefile">Makefile</a>.</p>
}}
------------------------------------
{{PAGE-SEG-TXT-7

<h2>Variable:</h2>
<p>This tool supports interdependent variables up to five steps.</p>
Example:
<div {{CODE-STYLE}}>
{{ VAR1  You?}} <br>
{{ VAR2  Are {{ VAR1}}}} <br>
{{ VAR3  How {{ VAR2}}}} <br>
</div>
VAR3 = How Are You?
<br>

<h2>Loops:</h2>
<p>It is also allowed two Nested loop.</p>
Example:
<div {{CODE-STYLE}}>
{{ FOR(0,2)<br>
&nbsp;&nbsp;{{ FOR(0,2)<br>
&nbsp;&nbsp;&nbsp;&nbsp;{{ VAR}}<br>
&nbsp;&nbsp;}}<br>
}}
</div>

Result:
<div {{CODE-STYLE}}>
{{ VAR-0-0}} <br>
{{ VAR-0-1}} <br>
{{ VAR-1-0}} <br>
{{ VAR-1-1}} <br>
</div>
<br>

<h2>Note:</h2>
<p>keep in mind that '<b>{{ </b>' and '<b>}}</b>' is a key command and should be used together!</p>
<p>If you want to use it, you have to type a space immediately after it '<b>{{ SPACE</b>' , 
so as not to be confused with variables. 
Do not worry about space, because it does not affect the output. and finally, do not forget his friend! '<b>}}</b>' </p>
}}
------------------------------------
{{SITE-CC 
Powered by <a href="https://www.w3schools.com/w3css/default.asp" 
title="W3.CSS" target="_blank" class="w3-hover-opacity">w3.css</a> & 
<a href="https://github.com/liyanboy74/htmixer">HTMixer</a>
}}
------------------------------------